Copyright (C) 2017-2024 MACHIN3, machin3.io, decal@machin3.io

Supplied DECALmachine Assets, such as example decal, trim sheet and atlas textures, as well as example blend files are created by MACHIN3

    Supplied DECALmachine Assets may not be distributed or sub-licensed to third parties
    unless permission is specifically granted.

User created DECALmachine Assets are fully owned by the user.

Parallax Nodetree originally by zelouille, ported by Vsevolod Ochinskiy and used with permission:
https://blenderartists.org/forum/showthread.php?314083-Cycles-parallax-step-mapping-with-nodes

The kivy packing algorithm in utils.atlas.kivy() is based on the Atlas
implementation of the Kivy project. See https://github.com/kivy/kivy/blob/master/kivy/atlas.py

Copyright and Permission notice:

    Copyright (c) 2010-2020 Kivy Team and other contributors

    Permission is hereby granted, free of charge, to any person obtaining a copy
    of this software and associated documentation files (the "Software"), to deal
    in the Software without restriction, including without limitation the rights
    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
    copies of the Software, and to permit persons to whom the Software is
    furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in
    all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
    THE SOFTWARE.

In the Kivy code, there's also this attribution:

    Thanks to
    omnisaurusgames.com/2011/06/texture-atlas-generation-using-python/
    for its initial implementation.

The blackpawn packing algorithm in utils.atlas.blackpawn() is based on work by Jim Scott.
See http://blackpawn.com/texts/lightmaps/default.html
